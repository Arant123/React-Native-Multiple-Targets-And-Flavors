fastlane_require 'dotenv'

default_platform(:ios)

platform :ios do

	team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)

	before_all do
		Dotenv.overload '.env.secret'
	end

	lane :stage do

		['MT-SB-Stage', 'MT-SB1-Stage', 'MT-SB2-Stage', 'MT-SB3-Stage'].each do |scheme|

			buildNumber = increment_build_number_in_plist(target: scheme)
			appVersion = get_version_number_from_plist(target: scheme)
	
			appIdentifier = get_product_bundle_id(project_filepath: '../ios/MT.xcodeproj', scheme: scheme)
			appName = get_info_plist_value(path: './' + scheme + '/' + scheme + '-Info.plist', key: 'CFBundleDisplayName')

			match(type: 'appstore', app_identifier: appIdentifier, readonly: true)
	
			enable_automatic_code_signing(path: '../ios/MT.xcodeproj')

			gym(
				scheme: scheme,
				configuration: 'Release',
				export_method: 'app-store',
<<<<<<< HEAD
				export_xcargs: '-allowProvisioningUpdates',
=======
				export_xcargs: '-allowProvisioningUpdates'
>>>>>>> ea0239647a82088033a78fe4f6df1b300430aabd
			)
	
			pilot(username: 'eugene@theleanapps.com')

			slack(
				message: ' ' + appName + ' Released',
				slack_url: ENV['SLACK_URL'],
				payload: {
					'' => '',
					'○ Bundle ID' => appIdentifier,
					'○ Build Date' => Time.new.to_s,
					'○ Build Number' => buildNumber,
					'○ App Version' => appVersion,
				},
			)

		end

	end

	error do |lane, exception|
		slack(
			message: exception.message,
			success: false
		)
	end

end
