// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		006C376C8A037C4354E0CF76 /* libPods-MT-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 269F954647AA5F877A356C30 /* libPods-MT-tvOSTests.a */; };
		00E356F31AD99517003FC87E /* MTTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* MTTests.m */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		2C1455F9C1CB2B0B4BEF32E0 /* libPods-MT-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 944A29D098C5DAAC9499F159 /* libPods-MT-tvOS.a */; };
		2C6EA8622B23C9519E3A1CAC /* libPods-MT-MT-SB3-Stage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 12E0AB093EBDDFA9F427305A /* libPods-MT-MT-SB3-Stage.a */; };
		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		2DCD954D1E0B4F2C00145EB5 /* MTTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* MTTests.m */; };
		35528A35256BE8E100F39246 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 35528A34256BE8E100F39246 /* Images.xcassets */; };
		357F9AAD256BDF3800A9B8BE /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		357F9AAE256BDF3800A9B8BE /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		357F9AB4256BDF3800A9B8BE /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		357F9AB5256BDF3800A9B8BE /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		357F9AE3256BE1BF00A9B8BE /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 357F9AE2256BE1BF00A9B8BE /* GoogleService-Info.plist */; };
		35C8AAAC2555F94B002F9DBC /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		35C8AAAD2555F94B002F9DBC /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		35C8AAB12555F94B002F9DBC /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		35C8AAB22555F94B002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		35C8AACC2555FC3D002F9DBC /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AACB2555FC3D002F9DBC /* GoogleService-Info.plist */; };
		35C8AB6B25560091002F9DBC /* MT-SB-Dev-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AB6A25560091002F9DBC /* MT-SB-Dev-Info.plist */; };
		35C8AE162556AD4D002F9DBC /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		35C8AE172556AD4D002F9DBC /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		35C8AE1C2556AD4D002F9DBC /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		35C8AE1D2556AD4D002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		35C8AE322556AD66002F9DBC /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		35C8AE332556AD66002F9DBC /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		35C8AE382556AD66002F9DBC /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		35C8AE392556AD66002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		35C8AE582556ADE6002F9DBC /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		35C8AE592556ADE6002F9DBC /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		35C8AE5E2556ADE6002F9DBC /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		35C8AE5F2556ADE6002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		35C8AE872556AED5002F9DBC /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		35C8AE882556AED5002F9DBC /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		35C8AE8D2556AED5002F9DBC /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		35C8AE8E2556AED5002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		35C8AEB82556B42C002F9DBC /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEB62556B42C002F9DBC /* GoogleService-Info.plist */; };
		35C8AEB92556B42C002F9DBC /* MT-SB-Stage-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEB72556B42C002F9DBC /* MT-SB-Stage-Info.plist */; };
		35C8AEC72556B43D002F9DBC /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEC42556B43D002F9DBC /* GoogleService-Info.plist */; };
		35C8AEC82556B43D002F9DBC /* MT-SB1-Stage-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEC62556B43D002F9DBC /* MT-SB1-Stage-Info.plist */; };
		35C8AED62556B44D002F9DBC /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AED42556B44D002F9DBC /* GoogleService-Info.plist */; };
		35C8AED72556B44D002F9DBC /* MT-SB2-Stage-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AED52556B44D002F9DBC /* MT-SB2-Stage-Info.plist */; };
		35C8AEE52556B457002F9DBC /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEE22556B457002F9DBC /* GoogleService-Info.plist */; };
		35C8AEE62556B457002F9DBC /* MT-SB3-Stage-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AEE32556B457002F9DBC /* MT-SB3-Stage-Info.plist */; };
		35C8AF592556BA90002F9DBC /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 35C8AF582556BA90002F9DBC /* Images.xcassets */; };
		417CE8999A26DF88FDAAB155 /* (null) in Frameworks */ = {isa = PBXBuildFile; };
		4D90BE92566E261EC879CA0B /* libPods-MT-MT-SB-Stage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 088E1D81E102027A79A8C5D7 /* libPods-MT-MT-SB-Stage.a */; };
		74F6275206CB061D1DEA63E7 /* libPods-MT.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 57C09176D37510E0634D1A96 /* libPods-MT.a */; };
		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		85ED68ADE3BABD16BE1E4CD6 /* libPods-MT-MTTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = D3E13FE4EEFE2F51C5952335 /* libPods-MT-MTTests.a */; };
		90F1881FA2165B5EE8FFBF92 /* (null) in Frameworks */ = {isa = PBXBuildFile; };
		AA32AB82B62D57AE37A032A2 /* libPods-MT-MT-SB-Dev.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5986321E75C4B7EB205FAB43 /* libPods-MT-MT-SB-Dev.a */; };
		BAE77E76D47FEAD6A7F0F5C8 /* libPods-MT-MT-SB1-Prod.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4DCD31CF1E48337109A0D483 /* libPods-MT-MT-SB1-Prod.a */; };
		BC50B143B199C0EC099C3474 /* libPods-MT-MT-SB1-Stage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A2E885AB02C6EA529E75E729 /* libPods-MT-MT-SB1-Stage.a */; };
		BEC14ACF747FECEB6F9EC478 /* libPods-MT.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 57C09176D37510E0634D1A96 /* libPods-MT.a */; };
		C2636C311236C7EE38B6E465 /* libPods-MT-MT-SB2-Stage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DAF6BB3A1363BE62C94715B4 /* libPods-MT-MT-SB2-Stage.a */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
			remoteInfo = MT;
		};
		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
			remoteInfo = "MT-tvOS";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
		00E356EE1AD99517003FC87E /* MTTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = MTTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* MTTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = MTTests.m; sourceTree = "<group>"; };
		088E1D81E102027A79A8C5D7 /* libPods-MT-MT-SB-Stage.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB-Stage.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		12E0AB093EBDDFA9F427305A /* libPods-MT-MT-SB3-Stage.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB3-Stage.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07F961A680F5B00A75B9A /* MT.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = MT.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = MT/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = MT/AppDelegate.m; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = MT/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = MT/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = MT/main.m; sourceTree = "<group>"; };
		21708B3FE7593D6B4DFE1492 /* Pods-MT-MT-SB1-Prod.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB1-Prod.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod.debug.xcconfig"; sourceTree = "<group>"; };
		269F954647AA5F877A356C30 /* libPods-MT-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2D02E47B1E0B4A5D006451C7 /* MT-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		2D02E4901E0B4A5D006451C7 /* MT-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "MT-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
		35528A34256BE8E100F39246 /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Images.xcassets; sourceTree = "<group>"; };
		357F9ABD256BDF3800A9B8BE /* MT-SB1-Prod.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB1-Prod.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		357F9AD4256BDF8800A9B8BE /* MT-SB1-Prod-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = "MT-SB1-Prod-Info.plist"; sourceTree = "<group>"; };
		357F9AD6256BDFCE00A9B8BE /* MT-SB1-Prod.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = "MT-SB1-Prod.entitlements"; sourceTree = "<group>"; };
		357F9AE2256BE1BF00A9B8BE /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AABB2555F94B002F9DBC /* MT-SB-Dev.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB-Dev.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		35C8AACB2555FC3D002F9DBC /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AB6A25560091002F9DBC /* MT-SB-Dev-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "MT-SB-Dev-Info.plist"; sourceTree = "<group>"; };
		35C8ABF525560257002F9DBC /* MT-SB-Dev.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = "MT-SB-Dev.entitlements"; sourceTree = "<group>"; };
		35C8AE252556AD4E002F9DBC /* MT-SB-Stage.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB-Stage.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		35C8AE412556AD66002F9DBC /* MT-SB1-Stage.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB1-Stage.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		35C8AE672556ADE6002F9DBC /* MT-SB2-Stage.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB2-Stage.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		35C8AE962556AED5002F9DBC /* MT-SB3-Stage.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "MT-SB3-Stage.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		35C8AEB42556B42C002F9DBC /* MT-SB-Stage.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = "MT-SB-Stage.entitlements"; sourceTree = "<group>"; };
		35C8AEB62556B42C002F9DBC /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AEB72556B42C002F9DBC /* MT-SB-Stage-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "MT-SB-Stage-Info.plist"; sourceTree = "<group>"; };
		35C8AEC42556B43D002F9DBC /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AEC52556B43D002F9DBC /* MT-SB1-Stage.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = "MT-SB1-Stage.entitlements"; sourceTree = "<group>"; };
		35C8AEC62556B43D002F9DBC /* MT-SB1-Stage-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "MT-SB1-Stage-Info.plist"; sourceTree = "<group>"; };
		35C8AED22556B44D002F9DBC /* MT-SB2-Stage.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = "MT-SB2-Stage.entitlements"; sourceTree = "<group>"; };
		35C8AED42556B44D002F9DBC /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AED52556B44D002F9DBC /* MT-SB2-Stage-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "MT-SB2-Stage-Info.plist"; sourceTree = "<group>"; };
		35C8AEE22556B457002F9DBC /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService-Info.plist"; sourceTree = "<group>"; };
		35C8AEE32556B457002F9DBC /* MT-SB3-Stage-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "MT-SB3-Stage-Info.plist"; sourceTree = "<group>"; };
		35C8AEE42556B457002F9DBC /* MT-SB3-Stage.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = "MT-SB3-Stage.entitlements"; sourceTree = "<group>"; };
		35C8AF582556BA90002F9DBC /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Images.xcassets; sourceTree = "<group>"; };
		35FB2AAC2555D4350055991A /* MT.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = MT.entitlements; path = MT/MT.entitlements; sourceTree = "<group>"; };
		3F187BE96FF3AA16B82516BF /* Pods-MT-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-tvOS.release.xcconfig"; path = "Target Support Files/Pods-MT-tvOS/Pods-MT-tvOS.release.xcconfig"; sourceTree = "<group>"; };
		405DD449E5E14BEA65546054 /* Pods-MT.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT.debug.xcconfig"; path = "Target Support Files/Pods-MT/Pods-MT.debug.xcconfig"; sourceTree = "<group>"; };
		4105BDDB235DE422854105A9 /* Pods-MT-MT-SB-Stage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB-Stage.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage.debug.xcconfig"; sourceTree = "<group>"; };
		42DC0862ADB8AC3BA8982C18 /* Pods-MT-MT-SB3-Stage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB3-Stage.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage.release.xcconfig"; sourceTree = "<group>"; };
		4DCD31CF1E48337109A0D483 /* libPods-MT-MT-SB1-Prod.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB1-Prod.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		511E25A67DDD6099A4BDCDB2 /* Pods-MT-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-MT-tvOSTests/Pods-MT-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
		57C09176D37510E0634D1A96 /* libPods-MT.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		5986321E75C4B7EB205FAB43 /* libPods-MT-MT-SB-Dev.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB-Dev.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		59B5EEC3CCB14FAE5E95C559 /* Pods-MT-MTTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MTTests.release.xcconfig"; path = "Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests.release.xcconfig"; sourceTree = "<group>"; };
		760D656D5CFD2314D23C313F /* Pods-MT-MT-SB1-Stage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB1-Stage.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage.release.xcconfig"; sourceTree = "<group>"; };
		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = MT/LaunchScreen.storyboard; sourceTree = "<group>"; };
		822A519D6A4A976A8CCC7805 /* Pods-MT-MT-SB3-Stage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB3-Stage.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage.debug.xcconfig"; sourceTree = "<group>"; };
		944A29D098C5DAAC9499F159 /* libPods-MT-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		988AC97D08865501F4C140E0 /* Pods-MT-MT-SB1-Prod.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB1-Prod.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod.release.xcconfig"; sourceTree = "<group>"; };
		9A60C769EC0EB3311EB14770 /* Pods-MT-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-MT-tvOSTests/Pods-MT-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
		A2E885AB02C6EA529E75E729 /* libPods-MT-MT-SB1-Stage.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB1-Stage.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		A69ED6584543C3B9117F0590 /* Pods-MT-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-MT-tvOS/Pods-MT-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
		ADBCEFABA1F26972BC34B559 /* Pods-MT.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT.release.xcconfig"; path = "Target Support Files/Pods-MT/Pods-MT.release.xcconfig"; sourceTree = "<group>"; };
		BE04C5F8A1AB0B7FA0B4917B /* Pods-MT-MT-SB-Dev.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB-Dev.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev.debug.xcconfig"; sourceTree = "<group>"; };
		C5C1AA106FD1C640FE783508 /* Pods-MT-MT-SB-Dev.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB-Dev.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev.release.xcconfig"; sourceTree = "<group>"; };
		D3E13FE4EEFE2F51C5952335 /* libPods-MT-MTTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MTTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		DAF6BB3A1363BE62C94715B4 /* libPods-MT-MT-SB2-Stage.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MT-MT-SB2-Stage.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		E2132647777FB53A509A2AB6 /* Pods-MT-MT-SB2-Stage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB2-Stage.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage.release.xcconfig"; sourceTree = "<group>"; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
		F11129166259882148D419AE /* Pods-MT-MT-SB1-Stage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB1-Stage.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage.debug.xcconfig"; sourceTree = "<group>"; };
		F50C37B70FEE2075E191B1F0 /* Pods-MT-MTTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MTTests.debug.xcconfig"; path = "Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests.debug.xcconfig"; sourceTree = "<group>"; };
		F7DDFA6C6A81FBFE6E5F4F59 /* Pods-MT-MT-SB-Stage.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB-Stage.release.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage.release.xcconfig"; sourceTree = "<group>"; };
		FC2E7C580AB834973843E3B9 /* Pods-MT-MT-SB2-Stage.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MT-MT-SB2-Stage.debug.xcconfig"; path = "Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage.debug.xcconfig"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		00E356EB1AD99517003FC87E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				85ED68ADE3BABD16BE1E4CD6 /* libPods-MT-MTTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				417CE8999A26DF88FDAAB155 /* (null) in Frameworks */,
				90F1881FA2165B5EE8FFBF92 /* (null) in Frameworks */,
				BEC14ACF747FECEB6F9EC478 /* libPods-MT.a in Frameworks */,
				74F6275206CB061D1DEA63E7 /* libPods-MT.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4781E0B4A5D006451C7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2C1455F9C1CB2B0B4BEF32E0 /* libPods-MT-tvOS.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48D1E0B4A5D006451C7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				006C376C8A037C4354E0CF76 /* libPods-MT-tvOSTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		357F9AAF256BDF3800A9B8BE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BAE77E76D47FEAD6A7F0F5C8 /* libPods-MT-MT-SB1-Prod.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AAAE2555F94B002F9DBC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AA32AB82B62D57AE37A032A2 /* libPods-MT-MT-SB-Dev.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE182556AD4D002F9DBC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4D90BE92566E261EC879CA0B /* libPods-MT-MT-SB-Stage.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE342556AD66002F9DBC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BC50B143B199C0EC099C3474 /* libPods-MT-MT-SB1-Stage.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE5A2556ADE6002F9DBC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C2636C311236C7EE38B6E465 /* libPods-MT-MT-SB2-Stage.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE892556AED5002F9DBC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2C6EA8622B23C9519E3A1CAC /* libPods-MT-MT-SB3-Stage.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* MTTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* MTTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = MTTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* MT */ = {
			isa = PBXGroup;
			children = (
				35FB2AAC2555D4350055991A /* MT.entitlements */,
				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.m */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
				13B07FB71A68108700A75B9A /* main.m */,
			);
			name = MT;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
				D3E13FE4EEFE2F51C5952335 /* libPods-MT-MTTests.a */,
				944A29D098C5DAAC9499F159 /* libPods-MT-tvOS.a */,
				269F954647AA5F877A356C30 /* libPods-MT-tvOSTests.a */,
				5986321E75C4B7EB205FAB43 /* libPods-MT-MT-SB-Dev.a */,
				088E1D81E102027A79A8C5D7 /* libPods-MT-MT-SB-Stage.a */,
				A2E885AB02C6EA529E75E729 /* libPods-MT-MT-SB1-Stage.a */,
				DAF6BB3A1363BE62C94715B4 /* libPods-MT-MT-SB2-Stage.a */,
				12E0AB093EBDDFA9F427305A /* libPods-MT-MT-SB3-Stage.a */,
				57C09176D37510E0634D1A96 /* libPods-MT.a */,
				4DCD31CF1E48337109A0D483 /* libPods-MT-MT-SB1-Prod.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		357F9AC9256BDF4200A9B8BE /* MT-SB1-Prod */ = {
			isa = PBXGroup;
			children = (
				35528A34256BE8E100F39246 /* Images.xcassets */,
				357F9AD5256BDFCE00A9B8BE /* Firebase */,
				357F9AD6256BDFCE00A9B8BE /* MT-SB1-Prod.entitlements */,
				357F9AD4256BDF8800A9B8BE /* MT-SB1-Prod-Info.plist */,
			);
			path = "MT-SB1-Prod";
			sourceTree = "<group>";
		};
		357F9AD5256BDFCE00A9B8BE /* Firebase */ = {
			isa = PBXGroup;
			children = (
				357F9AE2256BE1BF00A9B8BE /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		35C8AAC22555F9B3002F9DBC /* MT-SB-Dev */ = {
			isa = PBXGroup;
			children = (
				35C8ABF525560257002F9DBC /* MT-SB-Dev.entitlements */,
				35C8AB6A25560091002F9DBC /* MT-SB-Dev-Info.plist */,
				35C8AACA2555FC3D002F9DBC /* Firebase */,
			);
			path = "MT-SB-Dev";
			sourceTree = "<group>";
		};
		35C8AACA2555FC3D002F9DBC /* Firebase */ = {
			isa = PBXGroup;
			children = (
				35C8AACB2555FC3D002F9DBC /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		35C8AE512556AD78002F9DBC /* MT-SB-Stage */ = {
			isa = PBXGroup;
			children = (
				35C8AEB52556B42C002F9DBC /* Firebase */,
				35C8AEB72556B42C002F9DBC /* MT-SB-Stage-Info.plist */,
				35C8AEB42556B42C002F9DBC /* MT-SB-Stage.entitlements */,
			);
			path = "MT-SB-Stage";
			sourceTree = "<group>";
		};
		35C8AE522556AD8C002F9DBC /* MT-SB1-Stage */ = {
			isa = PBXGroup;
			children = (
				35C8AF582556BA90002F9DBC /* Images.xcassets */,
				35C8AEC32556B43D002F9DBC /* Firebase */,
				35C8AEC62556B43D002F9DBC /* MT-SB1-Stage-Info.plist */,
				35C8AEC52556B43D002F9DBC /* MT-SB1-Stage.entitlements */,
			);
			path = "MT-SB1-Stage";
			sourceTree = "<group>";
		};
		35C8AE812556ADF3002F9DBC /* MT-SB2-Stage */ = {
			isa = PBXGroup;
			children = (
				35C8AED32556B44D002F9DBC /* Firebase */,
				35C8AED52556B44D002F9DBC /* MT-SB2-Stage-Info.plist */,
				35C8AED22556B44D002F9DBC /* MT-SB2-Stage.entitlements */,
			);
			path = "MT-SB2-Stage";
			sourceTree = "<group>";
		};
		35C8AEB32556AEEE002F9DBC /* MT-SB3-Stage */ = {
			isa = PBXGroup;
			children = (
				35C8AEE12556B457002F9DBC /* Firebase */,
				35C8AEE32556B457002F9DBC /* MT-SB3-Stage-Info.plist */,
				35C8AEE42556B457002F9DBC /* MT-SB3-Stage.entitlements */,
			);
			path = "MT-SB3-Stage";
			sourceTree = "<group>";
		};
		35C8AEB52556B42C002F9DBC /* Firebase */ = {
			isa = PBXGroup;
			children = (
				35C8AEB62556B42C002F9DBC /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		35C8AEC32556B43D002F9DBC /* Firebase */ = {
			isa = PBXGroup;
			children = (
				35C8AEC42556B43D002F9DBC /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		35C8AED32556B44D002F9DBC /* Firebase */ = {
			isa = PBXGroup;
			children = (
				35C8AED42556B44D002F9DBC /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		35C8AEE12556B457002F9DBC /* Firebase */ = {
			isa = PBXGroup;
			children = (
				35C8AEE22556B457002F9DBC /* GoogleService-Info.plist */,
			);
			path = Firebase;
			sourceTree = "<group>";
		};
		5A22A84E1987C24C81D7EDC8 /* Pods */ = {
			isa = PBXGroup;
			children = (
				F50C37B70FEE2075E191B1F0 /* Pods-MT-MTTests.debug.xcconfig */,
				59B5EEC3CCB14FAE5E95C559 /* Pods-MT-MTTests.release.xcconfig */,
				A69ED6584543C3B9117F0590 /* Pods-MT-tvOS.debug.xcconfig */,
				3F187BE96FF3AA16B82516BF /* Pods-MT-tvOS.release.xcconfig */,
				9A60C769EC0EB3311EB14770 /* Pods-MT-tvOSTests.debug.xcconfig */,
				511E25A67DDD6099A4BDCDB2 /* Pods-MT-tvOSTests.release.xcconfig */,
				BE04C5F8A1AB0B7FA0B4917B /* Pods-MT-MT-SB-Dev.debug.xcconfig */,
				C5C1AA106FD1C640FE783508 /* Pods-MT-MT-SB-Dev.release.xcconfig */,
				4105BDDB235DE422854105A9 /* Pods-MT-MT-SB-Stage.debug.xcconfig */,
				F7DDFA6C6A81FBFE6E5F4F59 /* Pods-MT-MT-SB-Stage.release.xcconfig */,
				F11129166259882148D419AE /* Pods-MT-MT-SB1-Stage.debug.xcconfig */,
				760D656D5CFD2314D23C313F /* Pods-MT-MT-SB1-Stage.release.xcconfig */,
				FC2E7C580AB834973843E3B9 /* Pods-MT-MT-SB2-Stage.debug.xcconfig */,
				E2132647777FB53A509A2AB6 /* Pods-MT-MT-SB2-Stage.release.xcconfig */,
				822A519D6A4A976A8CCC7805 /* Pods-MT-MT-SB3-Stage.debug.xcconfig */,
				42DC0862ADB8AC3BA8982C18 /* Pods-MT-MT-SB3-Stage.release.xcconfig */,
				405DD449E5E14BEA65546054 /* Pods-MT.debug.xcconfig */,
				ADBCEFABA1F26972BC34B559 /* Pods-MT.release.xcconfig */,
				21708B3FE7593D6B4DFE1492 /* Pods-MT-MT-SB1-Prod.debug.xcconfig */,
				988AC97D08865501F4C140E0 /* Pods-MT-MT-SB1-Prod.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				357F9AC9256BDF4200A9B8BE /* MT-SB1-Prod */,
				35C8AEB32556AEEE002F9DBC /* MT-SB3-Stage */,
				35C8AE812556ADF3002F9DBC /* MT-SB2-Stage */,
				35C8AE522556AD8C002F9DBC /* MT-SB1-Stage */,
				35C8AE512556AD78002F9DBC /* MT-SB-Stage */,
				35C8AAC22555F9B3002F9DBC /* MT-SB-Dev */,
				13B07FAE1A68108700A75B9A /* MT */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				00E356EF1AD99517003FC87E /* MTTests */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				5A22A84E1987C24C81D7EDC8 /* Pods */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* MT.app */,
				00E356EE1AD99517003FC87E /* MTTests.xctest */,
				2D02E47B1E0B4A5D006451C7 /* MT-tvOS.app */,
				2D02E4901E0B4A5D006451C7 /* MT-tvOSTests.xctest */,
				35C8AABB2555F94B002F9DBC /* MT-SB-Dev.app */,
				35C8AE252556AD4E002F9DBC /* MT-SB-Stage.app */,
				35C8AE412556AD66002F9DBC /* MT-SB1-Stage.app */,
				35C8AE672556ADE6002F9DBC /* MT-SB2-Stage.app */,
				35C8AE962556AED5002F9DBC /* MT-SB3-Stage.app */,
				357F9ABD256BDF3800A9B8BE /* MT-SB1-Prod.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00E356ED1AD99517003FC87E /* MTTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "MTTests" */;
			buildPhases = (
				2277B0EC6A450765B60698C9 /* [CP] Check Pods Manifest.lock */,
				DDA1C40B796E89C4FD6877C4 /* [CP] Prepare Artifacts */,
				00E356EA1AD99517003FC87E /* Sources */,
				00E356EB1AD99517003FC87E /* Frameworks */,
				00E356EC1AD99517003FC87E /* Resources */,
				E8EBD04AD0D4F09993DDD7B6 /* [CP] Copy Pods Resources */,
				BD167767331A97F197D7EA27 /* [CP] Embed Pods Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				00E356F51AD99517003FC87E /* PBXTargetDependency */,
			);
			name = MTTests;
			productName = MTTests;
			productReference = 00E356EE1AD99517003FC87E /* MTTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		13B07F861A680F5B00A75B9A /* MT */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "MT" */;
			buildPhases = (
				AE939716A03F2C3E013FA55C /* [CP] Check Pods Manifest.lock */,
				FD10A7F022414F080027D42C /* Start Packager */,
				F16FC85AB5D6102D3B5FB6F8 /* [CP] Prepare Artifacts */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				2371ED85CB4D13495ED95AD2 /* [CP] Copy Pods Resources */,
				4B526349999B19158449282A /* [CP-User] [RNFB] Core Configuration */,
				50E20C60FBA7EAC138B25692 /* [CP] Embed Pods Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MT;
			productName = MT;
			productReference = 13B07F961A680F5B00A75B9A /* MT.app */;
			productType = "com.apple.product-type.application";
		};
		2D02E47A1E0B4A5D006451C7 /* MT-tvOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "MT-tvOS" */;
			buildPhases = (
				7D9FF6F057FF3D34A888CF53 /* [CP] Check Pods Manifest.lock */,
				FD10A7F122414F3F0027D42C /* Start Packager */,
				2D02E4771E0B4A5D006451C7 /* Sources */,
				2D02E4781E0B4A5D006451C7 /* Frameworks */,
				2D02E4791E0B4A5D006451C7 /* Resources */,
				2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-tvOS";
			productName = "MT-tvOS";
			productReference = 2D02E47B1E0B4A5D006451C7 /* MT-tvOS.app */;
			productType = "com.apple.product-type.application";
		};
		2D02E48F1E0B4A5D006451C7 /* MT-tvOSTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "MT-tvOSTests" */;
			buildPhases = (
				5EB1437FC006F5751A65607E /* [CP] Check Pods Manifest.lock */,
				2D02E48C1E0B4A5D006451C7 /* Sources */,
				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
				2D02E48E1E0B4A5D006451C7 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				2D02E4921E0B4A5D006451C7 /* PBXTargetDependency */,
			);
			name = "MT-tvOSTests";
			productName = "MT-tvOSTests";
			productReference = 2D02E4901E0B4A5D006451C7 /* MT-tvOSTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		357F9AA8256BDF3800A9B8BE /* MT-SB1-Prod */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 357F9ABA256BDF3800A9B8BE /* Build configuration list for PBXNativeTarget "MT-SB1-Prod" */;
			buildPhases = (
				15CE8F031E78298679DAB0D5 /* [CP] Check Pods Manifest.lock */,
				357F9AAA256BDF3800A9B8BE /* Start Packager */,
				357F9AAB256BDF3800A9B8BE /* [CP] Prepare Artifacts */,
				357F9AAC256BDF3800A9B8BE /* Sources */,
				357F9AAF256BDF3800A9B8BE /* Frameworks */,
				357F9AB3256BDF3800A9B8BE /* Resources */,
				357F9AB6256BDF3800A9B8BE /* Bundle React Native code and images */,
				357F9AD7256BE0D200A9B8BE /* Setup Firebase Environment GoogleService-Info.plist */,
				2BF3DFEF77E8DE2D9F67086A /* [CP] Embed Pods Frameworks */,
				2505B8D4B2A84E464C012817 /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB1-Prod";
			productName = MT;
			productReference = 357F9ABD256BDF3800A9B8BE /* MT-SB1-Prod.app */;
			productType = "com.apple.product-type.application";
		};
		35C8AAA72555F94B002F9DBC /* MT-SB-Dev */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 35C8AAB82555F94B002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB-Dev" */;
			buildPhases = (
				35C8AAA82555F94B002F9DBC /* [CP] Check Pods Manifest.lock */,
				35C8AAA92555F94B002F9DBC /* Start Packager */,
				35C8AAAA2555F94B002F9DBC /* [CP] Prepare Artifacts */,
				35C8AAAB2555F94B002F9DBC /* Sources */,
				35C8AAAE2555F94B002F9DBC /* Frameworks */,
				35C8AAB02555F94B002F9DBC /* Resources */,
				35C8AAB42555F94B002F9DBC /* Bundle React Native code and images */,
				35C8AAB52555F94B002F9DBC /* [CP] Copy Pods Resources */,
				35C8AAB72555F94B002F9DBC /* [CP] Embed Pods Frameworks */,
				35C8AAD72555FCF4002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB-Dev";
			productName = MT;
			productReference = 35C8AABB2555F94B002F9DBC /* MT-SB-Dev.app */;
			productType = "com.apple.product-type.application";
		};
		35C8AE112556AD4D002F9DBC /* MT-SB-Stage */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 35C8AE222556AD4D002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB-Stage" */;
			buildPhases = (
				35C8AE122556AD4D002F9DBC /* [CP] Check Pods Manifest.lock */,
				35C8AE132556AD4D002F9DBC /* Start Packager */,
				35C8AE142556AD4D002F9DBC /* [CP] Prepare Artifacts */,
				35C8AE152556AD4D002F9DBC /* Sources */,
				35C8AE182556AD4D002F9DBC /* Frameworks */,
				35C8AE1B2556AD4D002F9DBC /* Resources */,
				35C8AE1E2556AD4D002F9DBC /* Bundle React Native code and images */,
				35C8AE1F2556AD4D002F9DBC /* [CP] Copy Pods Resources */,
				35C8AE212556AD4D002F9DBC /* [CP] Embed Pods Frameworks */,
				35C8AEF02556B4FF002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB-Stage";
			productName = MT;
			productReference = 35C8AE252556AD4E002F9DBC /* MT-SB-Stage.app */;
			productType = "com.apple.product-type.application";
		};
		35C8AE2D2556AD66002F9DBC /* MT-SB1-Stage */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 35C8AE3E2556AD66002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB1-Stage" */;
			buildPhases = (
				35C8AE2E2556AD66002F9DBC /* [CP] Check Pods Manifest.lock */,
				35C8AE2F2556AD66002F9DBC /* Start Packager */,
				35C8AE302556AD66002F9DBC /* [CP] Prepare Artifacts */,
				35C8AE312556AD66002F9DBC /* Sources */,
				35C8AE342556AD66002F9DBC /* Frameworks */,
				35C8AE372556AD66002F9DBC /* Resources */,
				35C8AE3A2556AD66002F9DBC /* Bundle React Native code and images */,
				35C8AE3B2556AD66002F9DBC /* [CP] Copy Pods Resources */,
				35C8AE3D2556AD66002F9DBC /* [CP] Embed Pods Frameworks */,
				35C8AEF12556B508002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB1-Stage";
			productName = MT;
			productReference = 35C8AE412556AD66002F9DBC /* MT-SB1-Stage.app */;
			productType = "com.apple.product-type.application";
		};
		35C8AE532556ADE6002F9DBC /* MT-SB2-Stage */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 35C8AE642556ADE6002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB2-Stage" */;
			buildPhases = (
				35C8AE542556ADE6002F9DBC /* [CP] Check Pods Manifest.lock */,
				35C8AE552556ADE6002F9DBC /* Start Packager */,
				35C8AE562556ADE6002F9DBC /* [CP] Prepare Artifacts */,
				35C8AE572556ADE6002F9DBC /* Sources */,
				35C8AE5A2556ADE6002F9DBC /* Frameworks */,
				35C8AE5D2556ADE6002F9DBC /* Resources */,
				35C8AE602556ADE6002F9DBC /* Bundle React Native code and images */,
				35C8AE612556ADE6002F9DBC /* [CP] Copy Pods Resources */,
				35C8AE632556ADE6002F9DBC /* [CP] Embed Pods Frameworks */,
				35C8AEF22556B50D002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB2-Stage";
			productName = MT;
			productReference = 35C8AE672556ADE6002F9DBC /* MT-SB2-Stage.app */;
			productType = "com.apple.product-type.application";
		};
		35C8AE822556AED5002F9DBC /* MT-SB3-Stage */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 35C8AE932556AED5002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB3-Stage" */;
			buildPhases = (
				35C8AE832556AED5002F9DBC /* [CP] Check Pods Manifest.lock */,
				35C8AE842556AED5002F9DBC /* Start Packager */,
				35C8AE852556AED5002F9DBC /* [CP] Prepare Artifacts */,
				35C8AE862556AED5002F9DBC /* Sources */,
				35C8AE892556AED5002F9DBC /* Frameworks */,
				35C8AE8C2556AED5002F9DBC /* Resources */,
				35C8AE8F2556AED5002F9DBC /* Bundle React Native code and images */,
				35C8AE902556AED5002F9DBC /* [CP] Copy Pods Resources */,
				35C8AE922556AED5002F9DBC /* [CP] Embed Pods Frameworks */,
				35C8AEF32556B513002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "MT-SB3-Stage";
			productName = MT;
			productReference = 35C8AE962556AED5002F9DBC /* MT-SB3-Stage.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1130;
				TargetAttributes = {
					00E356ED1AD99517003FC87E = {
						CreatedOnToolsVersion = 6.2;
						TestTargetID = 13B07F861A680F5B00A75B9A;
					};
					13B07F861A680F5B00A75B9A = {
						DevelopmentTeam = 89FSMT35PK;
						LastSwiftMigration = 1120;
					};
					2D02E47A1E0B4A5D006451C7 = {
						CreatedOnToolsVersion = 8.2.1;
						ProvisioningStyle = Automatic;
					};
					2D02E48F1E0B4A5D006451C7 = {
						CreatedOnToolsVersion = 8.2.1;
						ProvisioningStyle = Automatic;
						TestTargetID = 2D02E47A1E0B4A5D006451C7;
					};
					357F9AA8256BDF3800A9B8BE = {
						DevelopmentTeam = 89FSMT35PK;
					};
					35C8AAA72555F94B002F9DBC = {
						DevelopmentTeam = 89FSMT35PK;
					};
					35C8AE112556AD4D002F9DBC = {
						DevelopmentTeam = 89FSMT35PK;
					};
					35C8AE2D2556AD66002F9DBC = {
						DevelopmentTeam = 89FSMT35PK;
					};
					35C8AE532556ADE6002F9DBC = {
						DevelopmentTeam = 89FSMT35PK;
					};
					35C8AE822556AED5002F9DBC = {
						DevelopmentTeam = 89FSMT35PK;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "MT" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* MT */,
				00E356ED1AD99517003FC87E /* MTTests */,
				2D02E47A1E0B4A5D006451C7 /* MT-tvOS */,
				2D02E48F1E0B4A5D006451C7 /* MT-tvOSTests */,
				35C8AAA72555F94B002F9DBC /* MT-SB-Dev */,
				35C8AE112556AD4D002F9DBC /* MT-SB-Stage */,
				35C8AE2D2556AD66002F9DBC /* MT-SB1-Stage */,
				35C8AE532556ADE6002F9DBC /* MT-SB2-Stage */,
				35C8AE822556AED5002F9DBC /* MT-SB3-Stage */,
				357F9AA8256BDF3800A9B8BE /* MT-SB1-Prod */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		00E356EC1AD99517003FC87E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4791E0B4A5D006451C7 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48E1E0B4A5D006451C7 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		357F9AB3256BDF3800A9B8BE /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				357F9AB4256BDF3800A9B8BE /* LaunchScreen.storyboard in Resources */,
				35528A35256BE8E100F39246 /* Images.xcassets in Resources */,
				357F9AB5256BDF3800A9B8BE /* Images.xcassets in Resources */,
				357F9AE3256BE1BF00A9B8BE /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AAB02555F94B002F9DBC /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AAB12555F94B002F9DBC /* LaunchScreen.storyboard in Resources */,
				35C8AACC2555FC3D002F9DBC /* GoogleService-Info.plist in Resources */,
				35C8AB6B25560091002F9DBC /* MT-SB-Dev-Info.plist in Resources */,
				35C8AAB22555F94B002F9DBC /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE1B2556AD4D002F9DBC /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE1C2556AD4D002F9DBC /* LaunchScreen.storyboard in Resources */,
				35C8AEB92556B42C002F9DBC /* MT-SB-Stage-Info.plist in Resources */,
				35C8AE1D2556AD4D002F9DBC /* Images.xcassets in Resources */,
				35C8AEB82556B42C002F9DBC /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE372556AD66002F9DBC /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE382556AD66002F9DBC /* LaunchScreen.storyboard in Resources */,
				35C8AF592556BA90002F9DBC /* Images.xcassets in Resources */,
				35C8AE392556AD66002F9DBC /* Images.xcassets in Resources */,
				35C8AEC72556B43D002F9DBC /* GoogleService-Info.plist in Resources */,
				35C8AEC82556B43D002F9DBC /* MT-SB1-Stage-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE5D2556ADE6002F9DBC /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AED72556B44D002F9DBC /* MT-SB2-Stage-Info.plist in Resources */,
				35C8AE5E2556ADE6002F9DBC /* LaunchScreen.storyboard in Resources */,
				35C8AE5F2556ADE6002F9DBC /* Images.xcassets in Resources */,
				35C8AED62556B44D002F9DBC /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE8C2556AED5002F9DBC /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE8D2556AED5002F9DBC /* LaunchScreen.storyboard in Resources */,
				35C8AEE62556B457002F9DBC /* MT-SB3-Stage-Info.plist in Resources */,
				35C8AE8E2556AED5002F9DBC /* Images.xcassets in Resources */,
				35C8AEE52556B457002F9DBC /* GoogleService-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		15CE8F031E78298679DAB0D5 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB1-Prod-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		2277B0EC6A450765B60698C9 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MTTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		2371ED85CB4D13495ED95AD2 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		2505B8D4B2A84E464C012817 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		2BF3DFEF77E8DE2D9F67086A /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native Code And Images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		357F9AAA256BDF3800A9B8BE /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		357F9AAB256BDF3800A9B8BE /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Prod/Pods-MT-MT-SB1-Prod-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		357F9AB6256BDF3800A9B8BE /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		357F9AD7256BE0D200A9B8BE /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		35C8AAA82555F94B002F9DBC /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB-Dev-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AAA92555F94B002F9DBC /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		35C8AAAA2555F94B002F9DBC /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AAB42555F94B002F9DBC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		35C8AAB52555F94B002F9DBC /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AAB72555F94B002F9DBC /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Dev/Pods-MT-MT-SB-Dev-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AAD72555FCF4002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		35C8AE122556AD4D002F9DBC /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB-Stage-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE132556AD4D002F9DBC /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		35C8AE142556AD4D002F9DBC /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE1E2556AD4D002F9DBC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		35C8AE1F2556AD4D002F9DBC /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE212556AD4D002F9DBC /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB-Stage/Pods-MT-MT-SB-Stage-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE2E2556AD66002F9DBC /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB1-Stage-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE2F2556AD66002F9DBC /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		35C8AE302556AD66002F9DBC /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE3A2556AD66002F9DBC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		35C8AE3B2556AD66002F9DBC /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE3D2556AD66002F9DBC /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB1-Stage/Pods-MT-MT-SB1-Stage-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE542556ADE6002F9DBC /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB2-Stage-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE552556ADE6002F9DBC /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		35C8AE562556ADE6002F9DBC /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE602556ADE6002F9DBC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		35C8AE612556ADE6002F9DBC /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE632556ADE6002F9DBC /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB2-Stage/Pods-MT-MT-SB2-Stage-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE832556AED5002F9DBC /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-MT-SB3-Stage-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE842556AED5002F9DBC /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		35C8AE852556AED5002F9DBC /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE8F2556AED5002F9DBC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		35C8AE902556AED5002F9DBC /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AE922556AED5002F9DBC /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MT-SB3-Stage/Pods-MT-MT-SB3-Stage-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		35C8AEF02556B4FF002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		35C8AEF12556B508002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		35C8AEF22556B50D002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		35C8AEF32556B513002F9DBC /* Setup Firebase Environment GoogleService-Info.plist */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Setup Firebase Environment GoogleService-Info.plist";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "GOOGLESERVICE_INFO_PLIST=GoogleService-Info.plist\nGOOGLESERVICE_INFO=${PROJECT_DIR}/${TARGET_NAME}/Firebase/${GOOGLESERVICE_INFO_PLIST}\n\necho \"Looking for ${GOOGLESERVICE_INFO_PLIST} in ${GOOGLESERVICE_INFO}\"\nif [ ! -f $GOOGLESERVICE_INFO ]\nthen\n    echo \"No GoogleService-Info.plist found. Please ensure it's in the proper directory.\"\n    exit 1\nfi\n\nPLIST_DESTINATION=${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app\necho \"Will copy ${GOOGLESERVICE_INFO_PLIST} to final destination: ${PLIST_DESTINATION}\"\n\necho \"Using ${GOOGLESERVICE_INFO}\"\ncp \"${GOOGLESERVICE_INFO}\" \"${PLIST_DESTINATION}\"\n";
		};
		4B526349999B19158449282A /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		50E20C60FBA7EAC138B25692 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		5EB1437FC006F5751A65607E /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-tvOSTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		7D9FF6F057FF3D34A888CF53 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-tvOS-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		AE939716A03F2C3E013FA55C /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-MT-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		BD167767331A97F197D7EA27 /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-frameworks.sh",
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			name = "[CP] Embed Pods Frameworks";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		DDA1C40B796E89C4FD6877C4 /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		E8EBD04AD0D4F09993DDD7B6 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-resources.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/Resources/gRPCCertificates-Cpp.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/gRPCCertificates-Cpp.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT-MTTests/Pods-MT-MTTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		F16FC85AB5D6102D3B5FB6F8 /* [CP] Prepare Artifacts */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-artifacts.sh",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/abseil.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/BoringSSL-GRPC.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/FirebaseFirestore.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-C++.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/gRPC-Core.xcframework",
				"${PODS_ROOT}/FirebaseFirestore/FirebaseFirestore/leveldb-library.xcframework",
			);
			name = "[CP] Prepare Artifacts";
			outputPaths = (
				"${BUILT_PRODUCTS_DIR}/cocoapods-artifacts-${CONFIGURATION}.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-MT/Pods-MT-artifacts.sh\"\n";
			showEnvVarsInLog = 0;
		};
		FD10A7F022414F080027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		FD10A7F122414F3F0027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		00E356EA1AD99517003FC87E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				00E356F31AD99517003FC87E /* MTTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4771E0B4A5D006451C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */,
				2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48C1E0B4A5D006451C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2DCD954D1E0B4F2C00145EB5 /* MTTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		357F9AAC256BDF3800A9B8BE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				357F9AAD256BDF3800A9B8BE /* AppDelegate.m in Sources */,
				357F9AAE256BDF3800A9B8BE /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AAAB2555F94B002F9DBC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AAAC2555F94B002F9DBC /* AppDelegate.m in Sources */,
				35C8AAAD2555F94B002F9DBC /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE152556AD4D002F9DBC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE162556AD4D002F9DBC /* AppDelegate.m in Sources */,
				35C8AE172556AD4D002F9DBC /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE312556AD66002F9DBC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE322556AD66002F9DBC /* AppDelegate.m in Sources */,
				35C8AE332556AD66002F9DBC /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE572556ADE6002F9DBC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE582556ADE6002F9DBC /* AppDelegate.m in Sources */,
				35C8AE592556ADE6002F9DBC /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		35C8AE862556AED5002F9DBC /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35C8AE872556AED5002F9DBC /* AppDelegate.m in Sources */,
				35C8AE882556AED5002F9DBC /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00E356F51AD99517003FC87E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 13B07F861A680F5B00A75B9A /* MT */;
			targetProxy = 00E356F41AD99517003FC87E /* PBXContainerItemProxy */;
		};
		2D02E4921E0B4A5D006451C7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2D02E47A1E0B4A5D006451C7 /* MT-tvOS */;
			targetProxy = 2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00E356F61AD99517003FC87E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F50C37B70FEE2075E191B1F0 /* Pods-MT-MTTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = MTTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/MT.app/MT";
			};
			name = Debug;
		};
		00E356F71AD99517003FC87E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 59B5EEC3CCB14FAE5E95C559 /* Pods-MT-MTTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				COPY_PHASE_STRIP = NO;
				INFOPLIST_FILE = MTTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/MT.app/MT";
			};
			name = Release;
		};
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 405DD449E5E14BEA65546054 /* Pods-MT.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = MT/MT.entitlements;
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = MT/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbonestage;
				PRODUCT_NAME = MT;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = ADBCEFABA1F26972BC34B559 /* Pods-MT.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = MT/MT.entitlements;
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = MT/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbonestage;
				PRODUCT_NAME = MT;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		2D02E4971E0B4A5E006451C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A69ED6584543C3B9117F0590 /* Pods-MT-tvOS.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "MT-tvOS/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.MT-tvOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TARGETED_DEVICE_FAMILY = 3;
				TVOS_DEPLOYMENT_TARGET = 10.0;
			};
			name = Debug;
		};
		2D02E4981E0B4A5E006451C7 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 3F187BE96FF3AA16B82516BF /* Pods-MT-tvOS.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "MT-tvOS/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.MT-tvOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TARGETED_DEVICE_FAMILY = 3;
				TVOS_DEPLOYMENT_TARGET = 10.0;
			};
			name = Release;
		};
		2D02E4991E0B4A5E006451C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9A60C769EC0EB3311EB14770 /* Pods-MT-tvOSTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "MT-tvOSTests/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.MT-tvOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/MT-tvOS.app/MT-tvOS";
				TVOS_DEPLOYMENT_TARGET = 10.1;
			};
			name = Debug;
		};
		2D02E49A1E0B4A5E006451C7 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 511E25A67DDD6099A4BDCDB2 /* Pods-MT-tvOSTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "MT-tvOSTests/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.MT-tvOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/MT-tvOS.app/MT-tvOS";
				TVOS_DEPLOYMENT_TARGET = 10.1;
			};
			name = Release;
		};
		357F9ABB256BDF3800A9B8BE /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 21708B3FE7593D6B4DFE1492 /* Pods-MT-MT-SB1-Prod.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIconMTSB1;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB1-Prod/MT-SB1-Prod.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB1-Prod/MT-SB1-Prod-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsboneprod;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		357F9ABC256BDF3800A9B8BE /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 988AC97D08865501F4C140E0 /* Pods-MT-MT-SB1-Prod.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIconMTSB1;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB1-Prod/MT-SB1-Prod.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB1-Prod/MT-SB1-Prod-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsboneprod;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		35C8AAB92555F94B002F9DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = BE04C5F8A1AB0B7FA0B4917B /* Pods-MT-MT-SB-Dev.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB-Dev/MT-SB-Dev.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB-Dev/MT-SB-Dev-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbdev;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		35C8AABA2555F94B002F9DBC /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C5C1AA106FD1C640FE783508 /* Pods-MT-MT-SB-Dev.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB-Dev/MT-SB-Dev.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB-Dev/MT-SB-Dev-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbdev;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		35C8AE232556AD4D002F9DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 4105BDDB235DE422854105A9 /* Pods-MT-MT-SB-Stage.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB-Stage/MT-SB-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB-Stage/MT-SB-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbstage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		35C8AE242556AD4D002F9DBC /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F7DDFA6C6A81FBFE6E5F4F59 /* Pods-MT-MT-SB-Stage.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB-Stage/MT-SB-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB-Stage/MT-SB-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbstage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		35C8AE3F2556AD66002F9DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F11129166259882148D419AE /* Pods-MT-MT-SB1-Stage.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIconMTSB1;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB1-Stage/MT-SB1-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB1-Stage/MT-SB1-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbonestage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		35C8AE402556AD66002F9DBC /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 760D656D5CFD2314D23C313F /* Pods-MT-MT-SB1-Stage.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIconMTSB1;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB1-Stage/MT-SB1-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB1-Stage/MT-SB1-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbonestage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		35C8AE652556ADE6002F9DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = FC2E7C580AB834973843E3B9 /* Pods-MT-MT-SB2-Stage.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB2-Stage/MT-SB2-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB2-Stage/MT-SB2-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbtwostage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		35C8AE662556ADE6002F9DBC /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = E2132647777FB53A509A2AB6 /* Pods-MT-MT-SB2-Stage.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB2-Stage/MT-SB2-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB2-Stage/MT-SB2-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbtwostage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		35C8AE942556AED5002F9DBC /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 822A519D6A4A976A8CCC7805 /* Pods-MT-MT-SB3-Stage.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB3-Stage/MT-SB3-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "MT-SB3-Stage/MT-SB3-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbthreestage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		35C8AE952556AED5002F9DBC /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 42DC0862ADB8AC3BA8982C18 /* Pods-MT-MT-SB3-Stage.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = "MT-SB3-Stage/MT-SB3-Stage.entitlements";
				CURRENT_PROJECT_VERSION = 7;
				DEVELOPMENT_TEAM = 89FSMT35PK;
				INFOPLIST_FILE = "MT-SB3-Stage/MT-SB3-Stage-Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.mtsbthreestage;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "MTTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00E356F61AD99517003FC87E /* Debug */,
				00E356F71AD99517003FC87E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "MT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "MT-tvOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2D02E4971E0B4A5E006451C7 /* Debug */,
				2D02E4981E0B4A5E006451C7 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "MT-tvOSTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2D02E4991E0B4A5E006451C7 /* Debug */,
				2D02E49A1E0B4A5E006451C7 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		357F9ABA256BDF3800A9B8BE /* Build configuration list for PBXNativeTarget "MT-SB1-Prod" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				357F9ABB256BDF3800A9B8BE /* Debug */,
				357F9ABC256BDF3800A9B8BE /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		35C8AAB82555F94B002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB-Dev" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35C8AAB92555F94B002F9DBC /* Debug */,
				35C8AABA2555F94B002F9DBC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		35C8AE222556AD4D002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB-Stage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35C8AE232556AD4D002F9DBC /* Debug */,
				35C8AE242556AD4D002F9DBC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		35C8AE3E2556AD66002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB1-Stage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35C8AE3F2556AD66002F9DBC /* Debug */,
				35C8AE402556AD66002F9DBC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		35C8AE642556ADE6002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB2-Stage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35C8AE652556ADE6002F9DBC /* Debug */,
				35C8AE662556ADE6002F9DBC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		35C8AE932556AED5002F9DBC /* Build configuration list for PBXNativeTarget "MT-SB3-Stage" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				35C8AE942556AED5002F9DBC /* Debug */,
				35C8AE952556AED5002F9DBC /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "MT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
